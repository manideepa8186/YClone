{"version":3,"file":"static/js/146.e0867f29.chunk.js","mappings":"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","sources":["components/VideoCard.js","components/AllVideos.js","helper/api.js","hooks/useFetchData.js","../node_modules/@mui/system/esm/Box/Box.js"],"sourcesContent":["import { Box } from '@mui/system'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { abbreviateNumber } from \"js-abbreviation-number\";\nimport { Link } from 'react-router-dom';\nimport { Typography } from '@mui/material';\n\nfunction VideoCard({video}) {\n\n    const ref= useRef()\n    const [Isvisible,setVisible] = useState(false)\n\n    \n    useEffect(()=>{\n\n        let observer = new IntersectionObserver(([entry])=>{\n            if(entry.isIntersecting)\n                setVisible(true)\n        },{threshold:0.8});\n        observer.observe(ref.current)\n\n        return(()=>{\n            observer.disconnect()\n        })\n\n    },[])\n\n\n  return (  Isvisible?(\n    <Link to={`/video/${video?.videoId}`} id='lazy-component' >\n        <Box sx={{maxWidth : '382px'}}> \n            <Box sx={{\n                margin: '18px',\n                borderRadius:'15px'\n                }\n            }>\n                <img src={video?.thumbnails[0]?.url} height='202px'  width='360px' style={{borderRadius:'15px'}}/>\n                <Box sx={{mt:'12px'}} >\n                    <Box sx={{display:'flex'}}>\n                    <img src={video?.author.avatar[0]?.url} style={{borderRadius:'23px',height:'35px',marginRight:'1%',marginTop:'1%'}}/>\n                    <Typography\n                            sx={{\n                                overflow: 'hidden',\n                                display: '-webkit-box',\n                                WebkitLineClamp: '2',\n                                WebkitBoxOrient: 'vertical',\n                                Width:video?.thumbnails[0]?.width, \n                                maxWidth:'340px',\n                                textOverflow: 'ellipsis',\n                                textDecoration:'none',\n                                color:'black',\n                                fontSize: '16px'\n                            }}\n                            >\n                              {video?.title}  \n                    </Typography>\n                    </Box>\n\n                </Box>\n                    <Box sx={{textDecoration:'none',color:'#464646',marginTop:'8px'}}>\n                        <span style={{marginLeft:'10%',fontSize:'15px',display:'block',marginBottom:'2px'}}>{video.author.title}</span>\n                        {video.stats.views && <span style={{marginLeft:'10%',fontSize:'15px',display:'inline-block'}}>{abbreviateNumber(video.stats.views)} views</span>}\n                        {video.publishedTimeText && <span style={{marginLeft:'5px',fontSize:'15px'}}>&#183; {video.publishedTimeText}</span>}\n                        \n                    </Box>\n            </Box>\n    \n    </Box>\n    </Link>):<div className='shimmer-wrapper'><div ref={ref} className='shimmer' id={video?.videoId} style={{borderRadius:'15px'}}></div></div>\n    )\n\n}\n\nexport default VideoCard","import { Box } from '@mui/system'\nimport React, { useEffect, useState, useMemo } from 'react'\nimport { FetchData } from '../helper/api'\nimport VideoCard from './VideoCard'\nimport {data} from '../helper/constants'\nimport useFetchData from '../hooks/useFetchData'\n\n\nfunction AllVideos({ Category }) {\n    console.log(Category)\n    // const [VideoData, setVideoData] = useState([])\n\n    // useEffect(() => {\n\n    //     // FetchData('search/?q=' + Category)\n    //     //     .then((data) => {\n    //     //         console.log(data.contents, Category);\n    //     //         setVideoData(data.contents)\n    //     //     })\n    //     setVideoData(data)\n    // }, [Category])\n    const VideoData = useFetchData(Category);\n    return (\n        <Box sx={{ display: 'flex', flexWrap: 'wrap',marginLeft:'5%'}} id='videos'>\n            {VideoData.length > 0 && VideoData?.map((data, index) => {\n                if (data.video) {\n                    return (\n                        <VideoCard key={index} video={data?.video} />\n                    )\n                }\n            }\n            )\n            }\n        </Box>\n    )\n}\n\nexport default AllVideos","import axios from \"axios\";\n\nconst API_KEY=process.env.REACT_APP_API_KEY\n\nconst API_URL='https://youtube138.p.rapidapi.com'\n\nconst options = {\n    params: { hl: 'en', gl: 'US'},\n    headers: {\n      'X-RapidAPI-Key': API_KEY,\n      'X-RapidAPI-Host': 'youtube138.p.rapidapi.com'\n    }\n  };\n\n\nexport const FetchData = async (url) => {\n\n    const response = await axios.get(`${API_URL}/${url}`,options);\n    return response.data;\n}","import React , {useState, useEffect} from 'react'\nimport { FetchData } from '../helper/api';\nimport {data} from '../helper/constants'\n\nfunction useFetchData(query) {\n\n    const [Data, setData] = useState([]);\n\n    useEffect(() =>{\n\n         FetchData('search/?q='+query)\n        .then((data)=>{\n            console.log(data)\n            setData(data.contents)\n        })\n        // setData(data)\n\n    },[query]);\n\n    return Data\n\n}\nexport default useFetchData\n","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["_ref","_video$thumbnails$","_video$author$avatar$","_video$thumbnails$2","video","ref","useRef","_useState","useState","_useState2","_slicedToArray","Isvisible","setVisible","useEffect","observer","IntersectionObserver","_ref2","isIntersecting","threshold","observe","current","disconnect","_jsx","Link","to","concat","videoId","id","children","Box","sx","maxWidth","_jsxs","margin","borderRadius","src","thumbnails","url","height","width","style","mt","display","author","avatar","marginRight","marginTop","Typography","overflow","WebkitLineClamp","WebkitBoxOrient","Width","textOverflow","textDecoration","color","fontSize","title","marginLeft","marginBottom","stats","views","abbreviateNumber","publishedTimeText","className","Category","console","log","VideoData","useFetchData","flexWrap","length","map","data","index","VideoCard","options","params","hl","gl","headers","process","FetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","sent","abrupt","stop","_x","apply","arguments","query","Data","setData","then","contents","createBox"],"sourceRoot":""}